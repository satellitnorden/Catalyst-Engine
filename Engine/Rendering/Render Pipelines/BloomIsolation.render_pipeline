//Declare unifom buffer includes.
IncludeUniformBuffer(PostProcessing);

//Declare input render targets.
InputRenderTarget(INTERMEDIATE_RGBA_FLOAT32_1 /* Identifier */, NEAREST /* Magnification Filter */, NEAREST /* Mipmap Mode */, CLAMP_TO_EDGE /* Address Mode */);

//Declare output render targets.
OutputRenderTarget(Scene);

//Declare render resolution.
RenderResolution(MAIN_FULL);

//Set the load/store operators.
ColorLoadOperator(DONT_CARE);
ColorStoreOperator(STORE);

//Set the topology.
Topology(TRIANGLE_FAN);

//Subscribe to input streams.
SubscribeToInputStream(Viewport);

//The vertex shader.
IncludeCommonVertexShader(ViewportScreenCoordinate);

//The fragment shader.
Fragment
{
    //Declare input parameters.
    InputParameter(vec2, InScreenCoordinate);

    //Sample the scene.
    vec4 scene = texture(INTERMEDIATE_RGBA_FLOAT32_1, InScreenCoordinate);

    //Calculate the brightness.
    float brightness = max(scene.r, max(scene.g, scene.b));

    //Calculate the contribution.
    float contribution = max(brightness - BLOOM_THRESHOLD, 0.0f);
    contribution /= max(brightness, FLOAT32_EPSILON);
    contribution *= 0.5f;

    //Write the fragment.
    OutputFragment(Scene, vec4(scene * contribution));
}