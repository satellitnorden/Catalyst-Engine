//Declare unifom buffer includes.
IncludeUniformBuffer(Camera);

//Declare shader function library includes.
IncludeShaderFunctionLibrary(Camera);

//Declare output depth buffer.
OutputDepthBuffer(SceneDepthBuffer);

//Declare output render targets.
OutputRenderTarget(SceneFeatures4);

//Declare render resolution.
RenderResolution(MAIN_FULL);

//Set the load/store operators.
ColorLoadOperator(LOAD);
ColorStoreOperator(STORE);
DepthStencilLoadOperator(LOAD);
DepthStencilStoreOperator(STORE);

//Set the topology.
Topology(TRIANGLE_FAN);

//Set depth/stencil properties.
StencilTestEnable();
StencilFailOperator(KEEP);
StencilPassOperator(KEEP);
StencilDepthFailOperator(KEEP);
StencilCompareOperator(NOT_EQUAL);
StencilCompareMask(1);
StencilReferenceMask(1);

//Subscribe to input streams.
SubscribeToInputStream(Viewport);

//The vertex shader.
IncludeCommonVertexShader(ViewportScreenCoordinate);

//The fragment shader.
Fragment
{
    //Declare input parameters.
    InputParameter(vec2, InScreenCoordinate);

    //Calculate the world position.
    vec3 world_position = CalculateWorldPosition(InScreenCoordinate, 0.0f);

    //Calculate the velocity.
    vec2 velocity = InScreenCoordinate - CalculatePreviousScreenCoordinate(world_position) + CURRENT_FRAME_JITTER;

    //Write the fragment.
    OutputFragment(SceneFeatures4, vec4(velocity, 0.0f, 0.0f));
}