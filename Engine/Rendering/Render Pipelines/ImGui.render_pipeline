//Declare output render target.
OutputRenderTarget(SceneLowDynamicRange1);

//Declare render resolution.
RenderResolution(MAIN_FULL);

//Set the load/store operators.
DepthStencilLoadOperator(DONT_CARE);
DepthStencilStoreOperator(DONT_CARE);
ColorLoadOperator(LOAD);
ColorStoreOperator(STORE);

//Set the cull mode.
CullMode(NONE);

//Set the topology.
Topology(TRIANGLE_FAN);

//Set blend properties.
BlendEnable();
BlendColorSourceFactor(SOURCE_ALPHA);
BlendColorDestinationFactor(ONE_MINUS_SOURCE_ALPHA);
BlendColorOperator(ADD);
BlendAlphaSourceFactor(ONE);
BlendAlphaDestinationFactor(ZERO);
BlendAlphaOperator(ADD);

//Declare push constant data.
PushConstantData(vec2, SCALE);
PushConstantData(vec2, TRANSLATION);

//Declare external textures.
ExternalTexture(TEXTURE /* Name */);

//Subscribe to input streams.
SubscribeToInputStream(ImGui);

//The vertex shader.
Vertex
{
    //Declare input parameters.
    InputParameter(vec2, InPosition);
    InputParameter(vec2, InTextureCoordinate);
    InputParameter(vec4, InColor);

    //Declare output parameters.
    OutputParameter(vec4, OutColor);
    OutputParameter(vec2, OutTextureCoordinate);

    //Pass data to the fragment shader.
    OutColor = InColor;
    OutTextureCoordinate = InTextureCoordinate;

    //Output the position.
    OutputVertexPosition(vec4(InPosition * SCALE + TRANSLATION, 0.0f, 1.0f));
}

//The fragment shader.
Fragment
{
    //Declare input parameters.
    InputParameter(vec4, InColor);
    InputParameter(vec2, InTextureCoordinate);

    //Output the fragment.
    OutputFragment(SceneLowDynamicRange1, InColor * texture(TEXTURE, InTextureCoordinate));
}